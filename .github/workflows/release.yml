# This workflow publishes a NodeJS package to npm when a release is created
# It also deploys the "latest" and tag development Docker image to Docker Hub

name: Publish to NPM

on:
  release:
    types: [published]
  push:
    branches-ignore:
      - 'master'

jobs:
  run-tests:
    name: Run Tests
    # if: github.event.release.target_commitish == 'master'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.release.tag_name }}
      - name: Use NodeJS v20.15.0
        uses: actions/setup-node@v3
        with:
          node-version: 20.15.0
          registry-url: https://registry.npmjs.org/
      - name: Install Dependencies
        run: npm install
      - name: Lint and Test
        run: |
          cp .env.example .env
          npm run lint
          npm test

  publish-npm:
    name: Publish to NPM Registry
    if: github.event.release.target_commitish == 'master'
    runs-on: ubuntu-latest
    needs: run-tests
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.release.tag_name }}
      - uses: actions/setup-node@v3
        with:
          node-version: 20.15.0
          registry-url: https://registry.npmjs.org/
      - run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

  docker-build-push-tag:
    name: Push Tagged Image
    if: github.event.release.target_commitish == 'master' && vars.DOCKERHUB_USERNAME != ''
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.release.tag_name }}

      - name: Set release version number
        run: sed -i -e "s/latest/${{ github.event.release.tag_name }}/g" docker-compose.dev.yml

      - name: Build Image
        run: |
          cp .env.example .env
          docker compose -f docker-compose.dev.yml build

      - name: Push Image to Docker Hub
        run: docker compose -f docker-compose.dev.yml push

  docker-build-push:
    name: Push Development Image
    if: github.event.release.target_commitish == 'master' && vars.DOCKERHUB_USERNAME != ''
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.release.tag_name }}

      - name: Build Image
        run: |
          cp .env.example .env
          docker compose -f docker-compose.dev.yml build

      - name: Push Image to Docker Hub
        run: docker compose -f docker-compose.dev.yml push
